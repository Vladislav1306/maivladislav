#include <iostream>
#include <cmath>
#include <SFML/Graphics.hpp>
#include <windows.h>

using namespace sf;

class Bear {

	float Mass;
	CircleShape Pooh;
	float x;
	float y;
	float r;

public:
	Bear(float m, float X, float Y, float R) {
		Mass = m;
		x = X;
		y = Y;
		r = R;

		Pooh.setFillColor(Color(139, 69, 19));

		Pooh.setOutlineThickness(5.f);
		Pooh.setOutlineColor(Color::Black);
	}

	float GetMass() {
		return Mass;
	}

	CircleShape Getpooh() {
		return Pooh;
	}

	void Movement(float dx, float dy) {
		x = x + dx;
		y = y - dy;

		if (x > 750) {
			x = 750;
		}

	}

	float GetX() {
		return x;
	}
	float GetY() {
		return y;
	}

	void draw(RenderWindow& window) {
		Pooh.setRadius(r);
		Pooh.setPosition(x, y);
		window.draw(Pooh);
	}

	float GetR() {
		return r;
	}

	float Eating(float mh, float x, float y) {

		if ((x >= 749 && x <= 751) && (y >= 209 && y <= 211)) {

			if (mh >= 0.1) {

					Mass = Mass + 0.1;
					mh = mh - 0.1;

					r = r + 0.1;
			}

		}

		return mh;
	}

};

class Engine {
	float F;
	float MaxF;
	float MinF;
public:
	Engine(float min, float max, float f)
	{
		F = f;
		MinF = min;
		MaxF = max;
	}

	void SetF(float percent)
	{
		F = percent * (MaxF / 100.);
	}

	float GetF()
	{
		return F;
	}

	float GetMaxF()
	{
		return MaxF;
	}

	float GetMinF()
	{
		return MinF;
	}
};

class PID {
	float Pk;
	float Ik;
	float Dk;
	float dT;

	float P = 0, I = 0, D = 0, out = 0, err = 0, prevErr = 0;

public:
	PID(float pk, float ik, float dk, float dt)
	{
		Pk = pk;
		Ik = ik;
		Dk = dk;
		dT = dt;
	}
	float Change(float input, float setpoint) {
		P = setpoint - input;
		I = I + (setpoint - input) * dT;
		err = setpoint - input;
		D = (err - prevErr) / dT;
		prevErr = err;

		out = Pk * P + Ik * I + Dk * D;
		if (out > 100)
		{
			return 100;
		}
		else if (out < -100)
		{
			return -100;
		}
		else
		{
			return out;
		}
	}
};

class ControlS {

	float Height;
	float DH;
	float Acceleration;

public:
	ControlS(float dh, float h, float a) {
		DH = dh;
		Acceleration = a;
		Height = h;

	}

	float GetAcc() {
		return Acceleration;
	}
	void SetAcc(float  F, float m, float g)
	{
		Acceleration = F / m;
	}

	float GetDH() {
		return DH;
	}
	void SetDH(float a, float dt, float g)
	{
		DH = a * dt - (g * pow(dt, 2)) / 2;
	}

	float GetHei() {
		return Height;
	}
	void SetHei(float a, float dt, float g)
	{
		Height = Height + a * dt - (g * pow(dt, 2)) / 2;
		if (Height < 0) {
			Height = 0;
		}
	}

};

class World {

	RectangleShape tree;
	RectangleShape land;
	CircleShape hole;
	CircleShape leaves;
	RectangleShape sky;
	float honeymass;

public:
	World(float HM) {
		land.setSize(Vector2f(1000, 80));
		land.setPosition(0, 720);
		land.setFillColor(Color::Green);

		tree.setSize(Vector2f(80, 600));
		tree.setPosition(800, 120);
		tree.setFillColor(Color(74, 48, 12));

		hole.setRadius(30.f);
		hole.setPosition(800, 200);
		hole.setFillColor(Color::Black);

		sky.setSize(Vector2f(1000, 1000));
		sky.setPosition(0, 0);
		sky.setFillColor(Color::Blue);

		leaves.setRadius(65.f);
		leaves.setPosition(775, 60);
		leaves.setFillColor(Color(0, 100, 0));

		honeymass = HM;
	}

	RectangleShape Getsky() {
		return sky;
	}
	RectangleShape Gettree() {
		return tree;
	}
	RectangleShape Getland() {
		return land;
	}
	CircleShape Gethole() {
		return hole;
	}

	CircleShape Getleaves() {
		return leaves;
	}

	float Gethm() {
		return honeymass;
	}

	void Sethm(float hm) {
		honeymass = hm;
	}

};

int main() {

	setlocale(LC_ALL, "Russian");
	
	const float hz = 790;
	const float g = 9.8;

	PID PiD (0.5, 0.02, 0.0012, 1);
	Bear pooh(10, 20, 665, 25);
	Engine e(0, 500, 0);
	ControlS Cs(0, 335, 0);
	World world(5);

	RenderWindow window(VideoMode(1000, 800), "Pooh");

	// Главный цикл приложения: выполняется, пока открыто окно
	while (window.isOpen())
	{

		window.draw(world.Getsky());
		window.draw(world.Getland());
		window.draw(world.Gettree());
		window.draw(world.Getleaves());
		window.draw(world.Gethole());

		Event event;
		while (window.pollEvent(event))
		{

			if (event.type == Event::Closed)
				window.close(); 
		}

		std::cout << "Значение высоты равно" << Cs.GetHei() << std::endl;
		std::cout << "Значение тяги равно равно" << e.GetF() << std::endl;
		std::cout << "Значение ускорения равно" << Cs.GetAcc() << std::endl;
		std::cout << "Значение dh равно" << Cs.GetDH() << std::endl;
		std::cout << "Значение массы меда равно" << world.Gethm() << std::endl;
		std::cout << "Значение массы пуха равно" << pooh.GetMass() << '\n' << std::endl;

		std::cout << "Значение x равно" << pooh.GetX() << std::endl;
		std::cout << "Значение y равно" << pooh.GetY() << '\n' << std::endl;

		e.SetF(PiD.Change(Cs.GetHei(), 790));
		Cs.SetAcc(e.GetF(), pooh.GetMass(), g);
		Cs.SetHei(Cs.GetAcc(), 0.1, g);
		Cs.SetDH(Cs.GetAcc(), 0.1, g);

		pooh.Movement(1, Cs.GetDH());
		pooh.draw(window);

		world.Sethm(pooh.Eating(world.Gethm(), pooh.GetX(), pooh.GetY()));

		window.display();

	}
 
	return 0;
}
